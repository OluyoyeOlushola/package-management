pipeline{
  agent {
    label 'master'
  } 
  tools {
    maven 'maven'  
  }
  //options{}
  //triggers{}
  stages {
    stage('1Clone'){
      steps{    
        sh "echo 'cloning the latest application version' "
        git branch: "master", url: "https://github.com/OluyoyeOlushola/maven-standalone-application"
        sh "echo 'latest application version available for testing and build' "
      }
    }
    stage('2TestBuild'){
      steps{
        sh "echo 'clean and install artifacts/packages' "
        sh "mvn clean install -DskipTests" 
        }
        post {
        success{
        echo "Now Archiving it...."
        }
       }
    }
   stage('3CodeQualityAnalysis') {
    steps{
        sh "echo setup sonarQube authentication"
        sh "echo 'Perfoming CodeQualityAnalysis' "
        sh "mvn sonar:sonar"      
    }
   }
   stage('4UploadArtifacts') {
    steps{
      sh "echo configure nexus authentication"
      sh "mvn deploy"
      sh "echo artifacts uploaded"
    }
   }
  stage('5deploy') {
    steps{
      deploy adapters: [tomcat9(credentialsId: 'TomcatServer', path: '', url: 'http://3.90.85.61:8080/')], contextPath: null, war: 'target/*.war'
        }
   }

  }
  post{ 
    always{
emailext body: 'Weldone Done  Team', recipientProviders: [contributor(), developers()], subject: 'Build Success', to: 'idrisoluyoye2000@yahoo.com'
    }
    success{
emailext body: 'Weldone Done  Team', recipientProviders: [contributor(), developers()], subject: 'Build Success', to: 'idrisoluyoye2000@yahoo.com'

    }
    failure{
emailext body: 'Please kindly review this job', recipientProviders: [contributor(), developers()], subject: 'Build failed', to: 'idrisoluyoye2000@yahoo.com'
}
}
}
